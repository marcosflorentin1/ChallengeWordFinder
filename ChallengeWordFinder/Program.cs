using System.Collections.Generic;

namespace ChallengeWordFinder
{
    public class Program
    {
        static void Main(string[] args)
        {
            var matrixSample = new List<string>
            {
                "PERROGSADDASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "UPODIAUSDKJWELMJBCIUSBPCOIUBPSADJCBPDSNGVBPÓKMKLDPFLLDSFSPSPUY",
                "ASDFGGSADDASGFJHVAMPIROUOUUERFTDBVNGHKHLUIOALIGATOROUIJLKGJMAS",
                "ASDFGGSCHEESEFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "UPODIAUSDKJWELMJBCIUSBPCOIUBPSADJCBPDSNGVBPÓKMELEPHANTSFSPSPUY",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUECFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "UPODIAUSDKJWELMJBCIUSBBUNNYBASADJCBPDSNGVBPÓKMKLDPFLLDSFSPSPUY",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUETFTDBVNGHKHLDIODGRTUIMBOUIJLKGJMAS",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUERFTDBVVAMPIREIGDGRTUIMBOUIJLKGJMAS",
                "UPODIAUSCATWELMJBCIUSBPCOIUBPSADJCBPDSNGGBAÓKMKLDPFLLDSFSPSPUY",
                "ASDFGGSADDASGFJHGKÑLIONUOUUERFTDBVNGHKHLUITDGRTUIMBOUIJLKGJMAS",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "UPODIAUSDKJWELMJBCIUSBPCOIUBPSADJCBPDSNGVDOGKMKLDPFLLDSFSPSPUY",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBVAMPIROJMAS",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "UPODIAUSDKJWELMJBCIUSBPCOIUBPSADJCBPDSNGVBPÓKMKLDPFLLDSFSPSPUY",
                "ASDFGPSADDARABBITKÑLKOPUOUUERFTDBVNGHKHLUIODDOGUIMBOUIJLKGJMAS",
                "ASDFGESADDASGFJHGKÑLKOPUOUUERFTDBVNBURGERIODGRTUIMBOUIJLKGJMAS",
                "UPODIRUSDKJWELMJBCIUSBPCOIUBPSADJCBPDSNGVBPGIRLLDPFLLDSFSPSPUY",
                "ASDFGRSADDASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "UPODIOUSDKJWELMJBCIUSBPCOIUBPSADJCPERROGVBPÓKMKLDPFLLDSFSPSPUY",
                "ASDFGGSDOGASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUBURGERUIMBOUIJLKGJMAS",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "UPODIAUSDKJWELMJBCIUSBPCOIUBPSADJCBPDSNGVBPÓKMKLDPFLLDSFSPSPUY",
                "ASDFGGSADDASGFJHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "ASDFGGSADDASGFJHGKÑIKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAS",
                "UPODIAUSDKJWELMJBCIESBPCOIUBPSADJCBPDSNGVBPÓKMKLDPFLLDSFSPSPUY",
                "ASDFGGSAODABOYJHGCATKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAP",
                "UPODIAUSGKJWELCJMANRSBPCOIUBPSADJCBPDSNGVBPÓKMKLDPFLLDSFSPSPUE",
                "ASDFGGSADDASGFOHGKÑEKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAR",
                "ASDFGGSADDASGFNHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAR",
                "DOGFGGSADDASGFEHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLCATDOG",
                "ASDFGGSADDASGFNHGKÑLKOPUOUUERFTDBVNGHKHLUIODGRTUIMBOUIJLKGJMAR"
            };

            var wordFinder = new WordFinder(matrixSample);

            var wordListSample = new List<string> { 
                "DOG",
                "CAT",
                "BUNNY",
                "ALIGATOR",
                "VAMPIRE",
                "RABBIT",
                "LION",
                "ELEPHANT",
                "BOY",
                "GIRL",
                "MAN",
                "CHEESE",
                "BURGER"
            };

            var result = wordFinder.Find(wordListSample);


            /*
                Analysis and evaluation

                My idea for this algorithm was to take the first letter of the word to search, extract the length of the word from the row and 
                compare the equality, the same with the column; the words and quantities are stored in a dictionary to ensure avoid duplicates.

                    In my case I tried to use some object oriented programming through a pattern, so 
                I've separated the main validations, of column and row, in classes using polymorphism.
             */
        }
    }
}
